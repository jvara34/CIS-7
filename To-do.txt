*DONE* void function greet(int size, bool duplicates)
{
    1) Program will great the user 

    2) Ask the user if they would allow duplicates in the array 

    3) Ask the user how long they could choose from 4, 6, 8

    pass by reference the value so no return 
}

*DONE* void generatedArr(int len) 
{
    - create and array that will have the same length of the one that takes in user input 
    - Will need a random num generator to help fill in the array 
    - Takes in the dup input from the user to determine if the array will have duplicates or will not have duplicates 
}

*DONE* void compareArr()
{
    - this function will compare the user input array with the other array from the random generatedArr 
    - Also output the amount of numbers that is correct 
    - Have a variable that gets the first element of the generatedArr and then compares that value to each element in the other user arr
    - and so on and so on ... 
    - If both arrays are correct then it will send the user to win()


    - Need a variable that will compare each element of the generatedArr with the user arr and count how many is right 
    - Use two if statments to determine correct spot for the arrays so the user knows that some numbers are in the correct spot  

    - two for loops the first one iterates through the generatedArr 
        - second loop checks if the generatedArr is in the user array 

        ORRR 

    one for loop and then a binary search for the speed 
}

*DONE* display()
{
    - the display function will only display a rectangle of x's to let the user know how many tries they have left 
    - with every move that the player makes the length of the x's will decrease by 1 to show that they have less tries 
}  

*DONE* void win()
{
    - this function is just to congrajulate the user on winning 
    - also ask if they would like to play again 
}

*DONE* void lose()
{
    - this functions tells user they lost and also prints outs the correct code 
}




Functionality of the array and how it should be used 
    - if that user input is correct it there is a variable that lets the user know if it is "1-4" 
- The program needs two arays because it then I compare the correct array with the input array 


To-do LATER
- Format with the iomanip library to make program look nice and pretty 
- Fix duplicate because I think it is not working properly 
    - Maybe remove the duplicates in the array or try to make an generated random array not print extra values 


Questions? 
- How to get the user input from c++ in a single line but multiple inputs?
    - or should i get the user input for each element of the array? 